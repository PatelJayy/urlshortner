name: Node.js CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        mongodb-version: ['6.0']

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
    
    - name: Install MongoDB driver
      run: npm install mongodb mongoose
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create env file
      run: |
        echo "PORT=8001" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "MONGO_URI=mongodb://localhost:27017/short-url" >> .env
    
    - name: Run linting and tests
      run: |
        npm install eslint --save-dev
        npx eslint --init || true
        npx eslint . --ext .js || true
    
    - name: Check application starts correctly
      run: |
        npm start & sleep 5
        curl -I http://localhost:8001 || true
        pkill -f "node index.js" || true

  deploy:
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Create vercel.json if not exists
        run: |
          if [ ! -f "vercel.json" ]; then
            echo '{
              "version": 2,
              "builds": [{"src": "index.js", "use": "@vercel/node"}],
              "routes": [{"src": "/(.*)", "dest": "index.js"}],
              "functions": {
                "api/*.js": {"memory": 1024, "maxDuration": 30},
                "index.js": {"memory": 1024, "maxDuration": 30}
              }
            }' > vercel.json
          fi
      
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          vercel --token ${VERCEL_TOKEN} --prod \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e MONGO_URI="${{ secrets.MONGO_URI }}" \
            -e NODE_ENV="production"

